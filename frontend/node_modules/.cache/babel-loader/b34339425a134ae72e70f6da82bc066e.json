{"ast":null,"code":"import Cookies from \"js-cookie\";\nimport qs from 'qs';\nconst BASEAPI = 'http://alunos.b7web.com.br:501';\n\nconst apiFetchPost = async (endpoint, body) => {\n  if (!body.token) {\n    let token = Cookies.get('token');\n\n    if (token) {\n      body.token = token;\n    }\n  }\n\n  const res = await fetch(BASEAPI + endpoint, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  });\n  const json = await res.json();\n\n  if (json.notallowed) {\n    window.location.href = '/login';\n    return;\n  }\n\n  return json;\n};\n\nconst apiFetchGet = async (endpoint, body = []) => {\n  if (!body.token) {\n    let token = Cookies.get('token');\n\n    if (token) {\n      body.token = token;\n    }\n  }\n\n  const res = await fetch(`${BASEAPI + endpoint}?${qs.stringify(body)}`);\n  const json = await res.json();\n\n  if (json.notallowed) {\n    window.location.href = '/login';\n    return;\n  }\n\n  return json;\n};\n\nconst AmorinhaAPI = {\n  login: async (email, password) => {\n    const jason = await apiFetchPost('/user/signin', {\n      email,\n      password\n    });\n    return jason;\n  },\n  regsiter: async (name, email, password, federalState) => {\n    const json = await apiFetchPost('/user/signup', {\n      name,\n      email,\n      password,\n      federalState\n    });\n    return json;\n  },\n  getStates: async () => {\n    const json = await apiFetchGet('/states');\n    return json.states;\n  }\n};\nexport default (() => AmorinhaAPI);","map":{"version":3,"sources":["/home/jael/Dropbox/devinhouse/front/react/amorinha/frontend/src/helpers/AmorinhaAPI.js"],"names":["Cookies","qs","BASEAPI","apiFetchPost","endpoint","body","token","get","res","fetch","method","headers","JSON","stringify","json","notallowed","window","location","href","apiFetchGet","AmorinhaAPI","login","email","password","jason","regsiter","name","federalState","getStates","states"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,EAAP,MAAe,IAAf;AAEA,MAAMC,OAAO,GAAG,gCAAhB;;AAEA,MAAMC,YAAY,GAAG,OAAOC,QAAP,EAAiBC,IAAjB,KAA0B;AAE3C,MAAI,CAACA,IAAI,CAACC,KAAV,EAAgB;AACZ,QAAIA,KAAK,GAAGN,OAAO,CAACO,GAAR,CAAY,OAAZ,CAAZ;;AACA,QAAID,KAAJ,EAAU;AACND,MAAAA,IAAI,CAACC,KAAL,GAAaA,KAAb;AACH;AACJ;;AAED,QAAME,GAAG,GAAG,MAAMC,KAAK,CAACP,OAAO,GAACE,QAAT,EAAmB;AACtCM,IAAAA,MAAM,EAAC,MAD+B;AAEtCC,IAAAA,OAAO,EAAC;AACJ,gBAAU,kBADN;AAEJ,sBAAgB;AAFZ,KAF8B;AAMtCN,IAAAA,IAAI,EAACO,IAAI,CAACC,SAAL,CAAeR,IAAf;AANiC,GAAnB,CAAvB;AASA,QAAMS,IAAI,GAAG,MAAMN,GAAG,CAACM,IAAJ,EAAnB;;AAEA,MAAIA,IAAI,CAACC,UAAT,EAAoB;AAChBC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACA;AACH;;AAED,SAAOJ,IAAP;AACH,CA1BD;;AA4BA,MAAMK,WAAW,GAAG,OAAOf,QAAP,EAAiBC,IAAI,GAAG,EAAxB,KAA+B;AAE/C,MAAI,CAACA,IAAI,CAACC,KAAV,EAAgB;AACZ,QAAIA,KAAK,GAAGN,OAAO,CAACO,GAAR,CAAY,OAAZ,CAAZ;;AACA,QAAID,KAAJ,EAAU;AACND,MAAAA,IAAI,CAACC,KAAL,GAAaA,KAAb;AACH;AACJ;;AAED,QAAME,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEP,OAAO,GAACE,QAAS,IAAGH,EAAE,CAACY,SAAH,CAAaR,IAAb,CAAmB,EAA3C,CAAvB;AAEA,QAAMS,IAAI,GAAG,MAAMN,GAAG,CAACM,IAAJ,EAAnB;;AAEA,MAAIA,IAAI,CAACC,UAAT,EAAoB;AAChBC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACA;AACH;;AAED,SAAOJ,IAAP;AACH,CAnBD;;AAqBA,MAAMM,WAAW,GAAG;AAChBC,EAAAA,KAAK,EAAC,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AAC7B,UAAMC,KAAK,GAAG,MAAMrB,YAAY,CAC5B,cAD4B,EAE5B;AAACmB,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAF4B,CAAhC;AAIA,WAAOC,KAAP;AACH,GAPe;AAShBC,EAAAA,QAAQ,EAAC,OAAOC,IAAP,EAAaJ,KAAb,EAAoBC,QAApB,EAA8BI,YAA9B,KAA+C;AACpD,UAAMb,IAAI,GAAG,MAAMX,YAAY,CAC3B,cAD2B,EAE3B;AAAEuB,MAAAA,IAAF;AAAQJ,MAAAA,KAAR;AAAeC,MAAAA,QAAf;AAAyBI,MAAAA;AAAzB,KAF2B,CAA/B;AAKA,WAAOb,IAAP;AACH,GAhBe;AAkBhBc,EAAAA,SAAS,EAAC,YAAY;AAClB,UAAMd,IAAI,GAAG,MAAMK,WAAW,CAC1B,SAD0B,CAA9B;AAGA,WAAOL,IAAI,CAACe,MAAZ;AACH;AAvBe,CAApB;AA0BA,gBAAe,MAAMT,WAArB","sourcesContent":["import Cookies from \"js-cookie\";\nimport qs from 'qs';\n\nconst BASEAPI = 'http://alunos.b7web.com.br:501';\n\nconst apiFetchPost = async (endpoint, body) => {\n\n    if (!body.token){\n        let token = Cookies.get('token');\n        if (token){\n            body.token = token;\n        }\n    }\n\n    const res = await fetch(BASEAPI+endpoint, {\n        method:'POST',\n        headers:{\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body:JSON.stringify(body)\n    });\n\n    const json = await res.json();\n\n    if (json.notallowed){\n        window.location.href = '/login';\n        return;\n    }\n\n    return json;\n}\n\nconst apiFetchGet = async (endpoint, body = []) => {\n\n    if (!body.token){\n        let token = Cookies.get('token');\n        if (token){\n            body.token = token;\n        }\n    }\n\n    const res = await fetch(`${BASEAPI+endpoint}?${qs.stringify(body)}`);\n\n    const json = await res.json();\n\n    if (json.notallowed){\n        window.location.href = '/login';\n        return;\n    }\n\n    return json;\n}\n\nconst AmorinhaAPI = {\n    login:async (email, password) => {\n        const jason = await apiFetchPost(\n            '/user/signin',\n            {email, password}\n        );\n        return jason;\n    },\n\n    regsiter:async (name, email, password, federalState) => {\n        const json = await apiFetchPost(\n            '/user/signup',\n            { name, email, password, federalState }\n        );\n\n        return json\n    },\n\n    getStates:async () => {\n        const json = await apiFetchGet(\n            '/states'\n        );\n        return json.states;\n    }\n};\n\nexport default () => AmorinhaAPI;"]},"metadata":{},"sourceType":"module"}